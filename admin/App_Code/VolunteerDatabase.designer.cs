#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Beans_DB_v5")]
public partial class VolunteerDatabaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertVolunteer(Volunteer instance);
  partial void UpdateVolunteer(Volunteer instance);
  partial void DeleteVolunteer(Volunteer instance);
  partial void InsertShift(Shift instance);
  partial void UpdateShift(Shift instance);
  partial void DeleteShift(Shift instance);
  partial void InsertEntity(Entity instance);
  partial void UpdateEntity(Entity instance);
  partial void DeleteEntity(Entity instance);
  #endregion
	
	public VolunteerDatabaseDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Beans_DB_v5ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VolunteerDatabaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VolunteerDatabaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VolunteerDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VolunteerDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Volunteer> Volunteers
	{
		get
		{
			return this.GetTable<Volunteer>();
		}
	}
	
	public System.Data.Linq.Table<Shift> Shifts
	{
		get
		{
			return this.GetTable<Shift>();
		}
	}
	
	public System.Data.Linq.Table<Entity> Entities
	{
		get
		{
			return this.GetTable<Entity>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer")]
public partial class Volunteer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Entity_ID;
	
	private int _Shift_ID;
	
	private System.Nullable<System.TimeSpan> _Clock_In;
	
	private System.Nullable<System.TimeSpan> _Clock_Out;
	
	private System.Nullable<int> _Volunteers_Scheduled;
	
	private System.Nullable<int> _Volunteers_Worked;
	
	private System.Data.Linq.Binary _Community_Service;
	
	private string _Volunteer_Comments;
	
	private System.Data.Linq.Binary _is_client;
	
	private EntityRef<Shift> _Shift;
	
	private EntityRef<Entity> _Entity;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntity_IDChanging(int value);
    partial void OnEntity_IDChanged();
    partial void OnShift_IDChanging(int value);
    partial void OnShift_IDChanged();
    partial void OnClock_InChanging(System.Nullable<System.TimeSpan> value);
    partial void OnClock_InChanged();
    partial void OnClock_OutChanging(System.Nullable<System.TimeSpan> value);
    partial void OnClock_OutChanged();
    partial void OnVolunteers_ScheduledChanging(System.Nullable<int> value);
    partial void OnVolunteers_ScheduledChanged();
    partial void OnVolunteers_WorkedChanging(System.Nullable<int> value);
    partial void OnVolunteers_WorkedChanged();
    partial void OnCommunity_ServiceChanging(System.Data.Linq.Binary value);
    partial void OnCommunity_ServiceChanged();
    partial void OnVolunteer_CommentsChanging(string value);
    partial void OnVolunteer_CommentsChanged();
    partial void Onis_clientChanging(System.Data.Linq.Binary value);
    partial void Onis_clientChanged();
    #endregion
	
	public Volunteer()
	{
		this._Shift = default(EntityRef<Shift>);
		this._Entity = default(EntityRef<Entity>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Entity_ID
	{
		get
		{
			return this._Entity_ID;
		}
		set
		{
			if ((this._Entity_ID != value))
			{
				if (this._Entity.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEntity_IDChanging(value);
				this.SendPropertyChanging();
				this._Entity_ID = value;
				this.SendPropertyChanged("Entity_ID");
				this.OnEntity_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Shift_ID
	{
		get
		{
			return this._Shift_ID;
		}
		set
		{
			if ((this._Shift_ID != value))
			{
				if (this._Shift.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShift_IDChanging(value);
				this.SendPropertyChanging();
				this._Shift_ID = value;
				this.SendPropertyChanged("Shift_ID");
				this.OnShift_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clock_In", DbType="Time")]
	public System.Nullable<System.TimeSpan> Clock_In
	{
		get
		{
			return this._Clock_In;
		}
		set
		{
			if ((this._Clock_In != value))
			{
				this.OnClock_InChanging(value);
				this.SendPropertyChanging();
				this._Clock_In = value;
				this.SendPropertyChanged("Clock_In");
				this.OnClock_InChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clock_Out", DbType="Time")]
	public System.Nullable<System.TimeSpan> Clock_Out
	{
		get
		{
			return this._Clock_Out;
		}
		set
		{
			if ((this._Clock_Out != value))
			{
				this.OnClock_OutChanging(value);
				this.SendPropertyChanging();
				this._Clock_Out = value;
				this.SendPropertyChanged("Clock_Out");
				this.OnClock_OutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteers_Scheduled", DbType="Int")]
	public System.Nullable<int> Volunteers_Scheduled
	{
		get
		{
			return this._Volunteers_Scheduled;
		}
		set
		{
			if ((this._Volunteers_Scheduled != value))
			{
				this.OnVolunteers_ScheduledChanging(value);
				this.SendPropertyChanging();
				this._Volunteers_Scheduled = value;
				this.SendPropertyChanged("Volunteers_Scheduled");
				this.OnVolunteers_ScheduledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteers_Worked", DbType="Int")]
	public System.Nullable<int> Volunteers_Worked
	{
		get
		{
			return this._Volunteers_Worked;
		}
		set
		{
			if ((this._Volunteers_Worked != value))
			{
				this.OnVolunteers_WorkedChanging(value);
				this.SendPropertyChanging();
				this._Volunteers_Worked = value;
				this.SendPropertyChanged("Volunteers_Worked");
				this.OnVolunteers_WorkedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community_Service", DbType="Binary(1)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Community_Service
	{
		get
		{
			return this._Community_Service;
		}
		set
		{
			if ((this._Community_Service != value))
			{
				this.OnCommunity_ServiceChanging(value);
				this.SendPropertyChanging();
				this._Community_Service = value;
				this.SendPropertyChanged("Community_Service");
				this.OnCommunity_ServiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_Comments", DbType="VarChar(50)")]
	public string Volunteer_Comments
	{
		get
		{
			return this._Volunteer_Comments;
		}
		set
		{
			if ((this._Volunteer_Comments != value))
			{
				this.OnVolunteer_CommentsChanging(value);
				this.SendPropertyChanging();
				this._Volunteer_Comments = value;
				this.SendPropertyChanged("Volunteer_Comments");
				this.OnVolunteer_CommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_client", DbType="Binary(1)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary is_client
	{
		get
		{
			return this._is_client;
		}
		set
		{
			if ((this._is_client != value))
			{
				this.Onis_clientChanging(value);
				this.SendPropertyChanging();
				this._is_client = value;
				this.SendPropertyChanged("is_client");
				this.Onis_clientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_Volunteer", Storage="_Shift", ThisKey="Shift_ID", OtherKey="Shift_ID", IsForeignKey=true)]
	public Shift Shift
	{
		get
		{
			return this._Shift.Entity;
		}
		set
		{
			Shift previousValue = this._Shift.Entity;
			if (((previousValue != value) 
						|| (this._Shift.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Shift.Entity = null;
					previousValue.Volunteers.Remove(this);
				}
				this._Shift.Entity = value;
				if ((value != null))
				{
					value.Volunteers.Add(this);
					this._Shift_ID = value.Shift_ID;
				}
				else
				{
					this._Shift_ID = default(int);
				}
				this.SendPropertyChanged("Shift");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Volunteer", Storage="_Entity", ThisKey="Entity_ID", OtherKey="Entity_ID", IsForeignKey=true)]
	public Entity Entity
	{
		get
		{
			return this._Entity.Entity;
		}
		set
		{
			Entity previousValue = this._Entity.Entity;
			if (((previousValue != value) 
						|| (this._Entity.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Entity.Entity = null;
					previousValue.Volunteers.Remove(this);
				}
				this._Entity.Entity = value;
				if ((value != null))
				{
					value.Volunteers.Add(this);
					this._Entity_ID = value.Entity_ID;
				}
				else
				{
					this._Entity_ID = default(int);
				}
				this.SendPropertyChanged("Entity");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Shift_ID;
	
	private string _Shift_Name;
	
	private System.Nullable<System.DateTime> _Shift_Date;
	
	private string _Shift_Description;
	
	private EntitySet<Volunteer> _Volunteers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShift_IDChanging(int value);
    partial void OnShift_IDChanged();
    partial void OnShift_NameChanging(string value);
    partial void OnShift_NameChanged();
    partial void OnShift_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnShift_DateChanged();
    partial void OnShift_DescriptionChanging(string value);
    partial void OnShift_DescriptionChanged();
    #endregion
	
	public Shift()
	{
		this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Shift_ID
	{
		get
		{
			return this._Shift_ID;
		}
		set
		{
			if ((this._Shift_ID != value))
			{
				this.OnShift_IDChanging(value);
				this.SendPropertyChanging();
				this._Shift_ID = value;
				this.SendPropertyChanged("Shift_ID");
				this.OnShift_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Shift_Name
	{
		get
		{
			return this._Shift_Name;
		}
		set
		{
			if ((this._Shift_Name != value))
			{
				this.OnShift_NameChanging(value);
				this.SendPropertyChanging();
				this._Shift_Name = value;
				this.SendPropertyChanged("Shift_Name");
				this.OnShift_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Shift_Date
	{
		get
		{
			return this._Shift_Date;
		}
		set
		{
			if ((this._Shift_Date != value))
			{
				this.OnShift_DateChanging(value);
				this.SendPropertyChanging();
				this._Shift_Date = value;
				this.SendPropertyChanged("Shift_Date");
				this.OnShift_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Description", DbType="VarChar(50)")]
	public string Shift_Description
	{
		get
		{
			return this._Shift_Description;
		}
		set
		{
			if ((this._Shift_Description != value))
			{
				this.OnShift_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._Shift_Description = value;
				this.SendPropertyChanged("Shift_Description");
				this.OnShift_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_Volunteer", Storage="_Volunteers", ThisKey="Shift_ID", OtherKey="Shift_ID")]
	public EntitySet<Volunteer> Volunteers
	{
		get
		{
			return this._Volunteers;
		}
		set
		{
			this._Volunteers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Shift = this;
	}
	
	private void detach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Shift = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entity")]
public partial class Entity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Entity_ID;
	
	private string _Entity_Organization_Name;
	
	private string _Entity_Contact_FName;
	
	private string _Entity_Contact_MName;
	
	private string _Entity_Contact_LName;
	
	private string _Entity_Address1;
	
	private string _Entity_Address2;
	
	private string _Entity_City;
	
	private string _Entity_State;
	
	private string _Entity_ZipCode;
	
	private string _Entity_Email;
	
	private string _Entity_Phone;
	
	private string _Entity_Type;
	
	private string _Entity_Support_Type;
	
	private EntitySet<Volunteer> _Volunteers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntity_IDChanging(int value);
    partial void OnEntity_IDChanged();
    partial void OnEntity_Organization_NameChanging(string value);
    partial void OnEntity_Organization_NameChanged();
    partial void OnEntity_Contact_FNameChanging(string value);
    partial void OnEntity_Contact_FNameChanged();
    partial void OnEntity_Contact_MNameChanging(string value);
    partial void OnEntity_Contact_MNameChanged();
    partial void OnEntity_Contact_LNameChanging(string value);
    partial void OnEntity_Contact_LNameChanged();
    partial void OnEntity_Address1Changing(string value);
    partial void OnEntity_Address1Changed();
    partial void OnEntity_Address2Changing(string value);
    partial void OnEntity_Address2Changed();
    partial void OnEntity_CityChanging(string value);
    partial void OnEntity_CityChanged();
    partial void OnEntity_StateChanging(string value);
    partial void OnEntity_StateChanged();
    partial void OnEntity_ZipCodeChanging(string value);
    partial void OnEntity_ZipCodeChanged();
    partial void OnEntity_EmailChanging(string value);
    partial void OnEntity_EmailChanged();
    partial void OnEntity_PhoneChanging(string value);
    partial void OnEntity_PhoneChanged();
    partial void OnEntity_TypeChanging(string value);
    partial void OnEntity_TypeChanged();
    partial void OnEntity_Support_TypeChanging(string value);
    partial void OnEntity_Support_TypeChanged();
    #endregion
	
	public Entity()
	{
		this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Entity_ID
	{
		get
		{
			return this._Entity_ID;
		}
		set
		{
			if ((this._Entity_ID != value))
			{
				this.OnEntity_IDChanging(value);
				this.SendPropertyChanging();
				this._Entity_ID = value;
				this.SendPropertyChanged("Entity_ID");
				this.OnEntity_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Organization_Name", DbType="VarChar(50)")]
	public string Entity_Organization_Name
	{
		get
		{
			return this._Entity_Organization_Name;
		}
		set
		{
			if ((this._Entity_Organization_Name != value))
			{
				this.OnEntity_Organization_NameChanging(value);
				this.SendPropertyChanging();
				this._Entity_Organization_Name = value;
				this.SendPropertyChanged("Entity_Organization_Name");
				this.OnEntity_Organization_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Contact_FName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Entity_Contact_FName
	{
		get
		{
			return this._Entity_Contact_FName;
		}
		set
		{
			if ((this._Entity_Contact_FName != value))
			{
				this.OnEntity_Contact_FNameChanging(value);
				this.SendPropertyChanging();
				this._Entity_Contact_FName = value;
				this.SendPropertyChanged("Entity_Contact_FName");
				this.OnEntity_Contact_FNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Contact_MName", DbType="VarChar(50)")]
	public string Entity_Contact_MName
	{
		get
		{
			return this._Entity_Contact_MName;
		}
		set
		{
			if ((this._Entity_Contact_MName != value))
			{
				this.OnEntity_Contact_MNameChanging(value);
				this.SendPropertyChanging();
				this._Entity_Contact_MName = value;
				this.SendPropertyChanged("Entity_Contact_MName");
				this.OnEntity_Contact_MNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Contact_LName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Entity_Contact_LName
	{
		get
		{
			return this._Entity_Contact_LName;
		}
		set
		{
			if ((this._Entity_Contact_LName != value))
			{
				this.OnEntity_Contact_LNameChanging(value);
				this.SendPropertyChanging();
				this._Entity_Contact_LName = value;
				this.SendPropertyChanged("Entity_Contact_LName");
				this.OnEntity_Contact_LNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Address1", DbType="VarChar(50)")]
	public string Entity_Address1
	{
		get
		{
			return this._Entity_Address1;
		}
		set
		{
			if ((this._Entity_Address1 != value))
			{
				this.OnEntity_Address1Changing(value);
				this.SendPropertyChanging();
				this._Entity_Address1 = value;
				this.SendPropertyChanged("Entity_Address1");
				this.OnEntity_Address1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Address2", DbType="VarChar(50)")]
	public string Entity_Address2
	{
		get
		{
			return this._Entity_Address2;
		}
		set
		{
			if ((this._Entity_Address2 != value))
			{
				this.OnEntity_Address2Changing(value);
				this.SendPropertyChanging();
				this._Entity_Address2 = value;
				this.SendPropertyChanged("Entity_Address2");
				this.OnEntity_Address2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_City", DbType="VarChar(50)")]
	public string Entity_City
	{
		get
		{
			return this._Entity_City;
		}
		set
		{
			if ((this._Entity_City != value))
			{
				this.OnEntity_CityChanging(value);
				this.SendPropertyChanging();
				this._Entity_City = value;
				this.SendPropertyChanged("Entity_City");
				this.OnEntity_CityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_State", DbType="VarChar(50)")]
	public string Entity_State
	{
		get
		{
			return this._Entity_State;
		}
		set
		{
			if ((this._Entity_State != value))
			{
				this.OnEntity_StateChanging(value);
				this.SendPropertyChanging();
				this._Entity_State = value;
				this.SendPropertyChanged("Entity_State");
				this.OnEntity_StateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_ZipCode", DbType="VarChar(5)")]
	public string Entity_ZipCode
	{
		get
		{
			return this._Entity_ZipCode;
		}
		set
		{
			if ((this._Entity_ZipCode != value))
			{
				this.OnEntity_ZipCodeChanging(value);
				this.SendPropertyChanging();
				this._Entity_ZipCode = value;
				this.SendPropertyChanged("Entity_ZipCode");
				this.OnEntity_ZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Email", DbType="VarChar(50)")]
	public string Entity_Email
	{
		get
		{
			return this._Entity_Email;
		}
		set
		{
			if ((this._Entity_Email != value))
			{
				this.OnEntity_EmailChanging(value);
				this.SendPropertyChanging();
				this._Entity_Email = value;
				this.SendPropertyChanged("Entity_Email");
				this.OnEntity_EmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Phone", DbType="VarChar(10)")]
	public string Entity_Phone
	{
		get
		{
			return this._Entity_Phone;
		}
		set
		{
			if ((this._Entity_Phone != value))
			{
				this.OnEntity_PhoneChanging(value);
				this.SendPropertyChanging();
				this._Entity_Phone = value;
				this.SendPropertyChanged("Entity_Phone");
				this.OnEntity_PhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Type", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string Entity_Type
	{
		get
		{
			return this._Entity_Type;
		}
		set
		{
			if ((this._Entity_Type != value))
			{
				this.OnEntity_TypeChanging(value);
				this.SendPropertyChanging();
				this._Entity_Type = value;
				this.SendPropertyChanged("Entity_Type");
				this.OnEntity_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Support_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Entity_Support_Type
	{
		get
		{
			return this._Entity_Support_Type;
		}
		set
		{
			if ((this._Entity_Support_Type != value))
			{
				this.OnEntity_Support_TypeChanging(value);
				this.SendPropertyChanging();
				this._Entity_Support_Type = value;
				this.SendPropertyChanged("Entity_Support_Type");
				this.OnEntity_Support_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Volunteer", Storage="_Volunteers", ThisKey="Entity_ID", OtherKey="Entity_ID")]
	public EntitySet<Volunteer> Volunteers
	{
		get
		{
			return this._Volunteers;
		}
		set
		{
			this._Volunteers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Entity = this;
	}
	
	private void detach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Entity = null;
	}
}
#pragma warning restore 1591
